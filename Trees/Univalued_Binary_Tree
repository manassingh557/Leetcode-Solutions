/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isUnivalTree(TreeNode* root,int val=-1) {
        if(!root)   //If root is NULL then tree is univalued
            return true;
        if(val<0)   //Update the initial value of node to root's value in tree
            val=root->val;
        return val==root->val && isUnivalTree(root->left,val) && isUnivalTree(root->right,val);
        // Check if node is equal to root and both left and right subtrees are univalued Tree
    }
};
