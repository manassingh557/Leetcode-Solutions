/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {
        if(!t2)             //if t2 is empty simply return t1
            return t1;
        if(!t1)             //if t1 is empty simply return t2
            return t2;      
        t1->val=t1->val+t2->val;    //add values of t1 and t2 in t1
        t1->left=mergeTrees(t1->left,t2->left); //recursively call for left subtree
        t1->right=mergeTrees(t1->right,t2->right);  //recursively call for right subtree
        return t1;
    }
};
