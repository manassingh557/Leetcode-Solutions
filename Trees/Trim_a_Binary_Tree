/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* trimBST(TreeNode* root, int L, int R) {
        if(!root)   //If root is Null then nothing to trim
            return NULL;
        if(root->val<L) //If root is less than L then Left subtree is of no use
            return trimBST(root->right,L,R);
        if(root->val>R) //If root is greater than R then Right subtree is of no use
            return trimBST(root->left,L,R);
        root->left=trimBST(root->left,L,R); //Otherwise trim left and right subtree and return root
        root->right=trimBST(root->right,L,R);
        return root;
    }
};
